// Header Section
// VHDL testbench ADD2_TB
// Generated by HDLGen, Github https://github.com/abishek-bupathi/HDLGen
// Reference: https://tinyurl.com/vicilogicVHDLTips 
// Component Name : ADD2
// Title          : 2-bit binary adder
// Description    : refer to component hdl model fro function description and signal dictionary
// Author(s)      : Fearghal Morgan
// Company        : University of Galway
// Email          : fearghal.morgan@universityofgalway.ie
// Date           : 29/03/2023

module ADD2_TB();

// testbench signal declarations
integer testNo; // aids locating test in simulation waveform
reg endOfSim; // assert at end of simulation to highlight simuation done. Stops clk signal generation.

// Typically use the same signal names as in the Verilog module

reg addIn1;
reg addIn0;
wire sum;

parameter  period = 20; // 20 ns

initial endOfSim = 1'b0;
 
ADD2 uut
	(
	.addIn1 (addIn1), 
	.addIn0 (addIn0), 
	.sum (sum)
	);

initial
begin
	// Apply default INPUT signal values. Do not assign output signals (generated by the UUT) here
	// Each stimulus signal change occurs 0.2*period after the active low-to-high clk edge
	testNo <= 0;
	addIn1 = 21'b0;
	addIn0 = 21'b0;
	repeat (2)
	// include testbench stimulus sequence here, i.e, input signal combinations and intervals (wait for n*period)
	// Use new testNo for each test set, to aid locating test on simualtion waveform
	testNo <= 1;

	// include testbench stimulus sequence here. Use new testNo for each test set
// manually added code START
// manually added code END

	endOfSim = 1'b1; // assert to stop clk signal generation

end
endmodule