<?xml version="1.0" ?>
<HDLGen>
	<genFolder>
		<verilog_folder>mux21_1/Verilog/model</verilog_folder>
		<verilog_folder>mux21_1/Verilog/testbench</verilog_folder>
		<verilog_folder>mux21_1/Verilog/ChatGPT</verilog_folder>
		<verilog_folder>mux21_1/Verilog/ChatGPT/Backups</verilog_folder>
		<verilog_folder>mux21_1/Verilog/AMDprj</verilog_folder>
	</genFolder>
	<projectManager>
		<settings>
			<name>mux21_1</name>
			<environment>C:/Users/User/HDLGen/User_Projects</environment>
			<location>C:/Users/User/HDLGen/User_Projects</location>
			<info>None</info>
		</settings>
		<EDA>
			<tool>
				<name>Xilinx Vivado</name>
				<dir>C:/Xilinx/Vivado/2019.1/bin/vivado.bat</dir>
				<version>2019.1</version>
			</tool>
		</EDA>
		<HDL>
			<language>
				<name>Verilog</name>
			</language>
		</HDL>
	</projectManager>
	<hdlDesign>
		<header>
			<compName>mux21_1</compName>
			<title>2-to-1 mux, 1-bit data</title>
			<description>sel is datapath control signal&amp;#10;muxOut = muxIn0 when sel  = 0&amp;#10;muxOut = muxIn1 when sel  = 1</description>
			<authors>Fearghal Morgan</authors>
			<company>University of Galway</company>
			<email>fearghal.morgan@universityofgalway.ie</email>
			<date>22/07/2023</date>
		</header>
		<clkAndRst/>
		<entityIOPorts>
			<signal>
				<name>muxIn0</name>
				<mode>in</mode>
				<type>single bit</type>
				<description>datapath 0 input signal</description>
			</signal>
			<signal>
				<name>muxIn1</name>
				<mode>in</mode>
				<type>single bit</type>
				<description>datapath 1 input signal</description>
			</signal>
			<signal>
				<name>muxOut</name>
				<mode>out</mode>
				<type>single bit</type>
				<description>data out signal</description>
			</signal>
			<signal>
				<name>sel</name>
				<mode>in</mode>
				<type>single bit</type>
				<description>datapath select&amp;#10;0 selects muxOut = muxIn0 (default)&amp;#10;1 selects muxOut = muxIn1</description>
			</signal>
		</entityIOPorts>
		<internalSignals/>
		<architecture>
			<archName>Combinational</archName>
			<process>
				<label>muxOut_p</label>
				<inputSignal>muxIn0</inputSignal>
				<inputSignal>muxIn1</inputSignal>
				<inputSignal>sel</inputSignal>
				<defaultOutput>muxOut,muxIn0</defaultOutput>
				<note>if sel = 1 muxOut = muxIn1</note>
			</process>
		</architecture>
		<testbench/>
		<chatgpt>
			<commands>
				<VHDLHeader>This is a VHDL model header section&amp;#10;Improve formatting of the signal dictionary descriptions&amp;#10;Output in a formatted code box</VHDLHeader>
				<VerilogHeader>This is a Verilog model header section&amp;#10;Improve formatting of the signal dictionary descriptions&amp;#10;Output in a formatted code box</VerilogHeader>
				<VHDLModel># This ChatGPT message header is used with the HDLGen-generated HDL model template (which can include pseudo code logic descriptions) to generate the complete HDL model.&amp;#10;&amp;#10;Complete the following VHDL model&amp;#44; and output in a single formatted code box.&amp;#10;&amp;#10;Output &amp;quot;Created by HDLGen https://github.com/fearghal1/HDLGen&amp;quot;&amp;#44; date&amp;#44; time&amp;#10;For each line between -- Title section start and -- Title section end&amp;#44; improve formatting of the text.&amp;#10;&amp;#10;For each line containing the prefix &amp;apos;---&amp;apos;&amp;#44; replace with generated VHDL code for the logic described&amp;#44; and remove the &amp;apos;---&amp;apos;.&amp;#10;For each line containing &amp;apos;_c:&amp;apos; in the label&amp;#44; do not generate a sequential statement&amp;#44; do not remove the label containing &amp;apos;_c:&amp;apos;&amp;#44; remove the &amp;apos;---&amp;apos;&amp;#44; and remove &amp;apos;-- Default assignment&amp;apos;&amp;#10;&amp;#10;Remove all assignments in if or case statements which duplicate the default assignment.&amp;#10;In VHDL processes&amp;#44; place the modified line containing suffix &amp;apos;-- Default assignment&amp;apos; immediately before the VHDL statements generated for lines containing prefix &amp;apos;---&amp;apos;.&amp;#10;Leave all labels unchanged.&amp;#10;For every assignment that includes an add (+) or subtract (-) operation&amp;#44; use &amp;apos;ieee.numeric_std&amp;apos; package signal type conversion functions to ensure correct VHDL syntax.&amp;#10;In assignments which include sign extending by one bit&amp;#44; use single quotes to define the single bit.&amp;#10;If using std_logic_vector signal as array index&amp;#44; use numeric_std to_integer function on unsigned signal&amp;#10;For every assignment which includes a shift operation&amp;#44; only use ieee.numeric_std package shift_left or shift_right functions&amp;#44; and do not use sra&amp;#44; srl&amp;#44; sll&amp;#44; shift_right_arithmetic functions.&amp;#10;Use if statements rather than conditional statements inside VHDL case or if statements&amp;#10;Do not add any new library &amp;apos;use&amp;apos; statements&amp;#44; to avoid conflicts with the ieee.numeric_std package functions.</VHDLModel>
				<VerilogModel># This ChatGPT message header is used with the HDLGen-generated HDL model template (which can include pseudo code logic descriptions) to generate the complete HDL model.&amp;#10;&amp;#10;Complete the following Verilog model&amp;#44; and output in a single formatted code box.&amp;#10;&amp;#10;For each line between // Title section start and // Title section end&amp;#44; improve formatting of the text.&amp;#10;Do not include input or output keywords in the module declaration&amp;#10;&amp;#10;For each line containing the prefix &amp;apos;///&amp;apos;&amp;#44; replace with generated Verilog code for the logic described&amp;#44; and remove the &amp;apos;///&amp;apos;.&amp;#10;For each line containing &amp;apos;_c:&amp;apos; in the label&amp;#44; do not generate a sequential statement&amp;#44; do not remove the label containing &amp;apos;_c:&amp;apos;&amp;#44; remove the &amp;apos;///&amp;apos;&amp;#44; and remove &amp;apos;// Default assignment&amp;apos;&amp;#10;&amp;#10;Use for loop (format for (i=0; i&amp;lt;32; i=i+1) around complete array signal assignments.&amp;#10;&amp;#10;Leave all labels unchanged.&amp;#10;Place the Verilog process line containing &amp;apos;// Default assignment&amp;apos;&amp;#44; unchanged&amp;#44; and immediately before the VHDL logic generated for lines containing prefix &amp;apos;///&amp;apos;.&amp;#10;Do not output the lines containing prefix &amp;apos;///&amp;apos;.&amp;#10;Include &amp;lt;= operator in assignments.&amp;#10;Make assignment bit widths compatible.&amp;#10;&amp;#10;For &amp;lt;&amp;lt;&amp;lt; shift right arithmetic assignment&amp;#44; apply the shift operation on the signed signal value&amp;#44; using $signed()&amp;#10;Remove all lines which contain default:</VerilogModel>
				<VHDLTestbench># This ChatGPT message header is used with the testbench signal declarations and test plan to generate the complete HDL testbench.&amp;#10;&amp;#10;In the table&amp;#44;&amp;#10;Input signal names are included in row 1&amp;#44; output signal names are included in row 2&amp;#44; signal radix is included in row 3.&amp;#10;TestNo is included in column 1&amp;#44; delay is included in column 3&amp;#10;&amp;#10;Create a single VHDL process stim_p&amp;#44; in a formatted code box&amp;#44; starting at row 4&amp;#44; and including the following&amp;#10;TestNo.&amp;#10;Comment in the Note column.&amp;#10;Assignment of every input signal&amp;#44; irrespective of its value. Do not assign any output signals. Use hexadecimal if signal format is greater or equal to 32 bits.&amp;#10;wait for (delay  * period); statement&amp;#44; where delay can be integer or real&amp;#44; after all signal stimulus for the row have been assigned&amp;#44; using delay value in the delay column&amp;#44; with brackets () around (delay * period).&amp;#10;Test if each output signal value (though not input signal values) matches the value included in its corresponding row&amp;#44; outputting a fail message if it does not match.</VHDLTestbench>
				<VerilogTestbench># This ChatGPT message header is used with the testbench signal declarations and test plan to generate the complete HDL testbench.&amp;#10;&amp;#10;In the table&amp;#44;&amp;#10;Input signal names are included in row 1&amp;#44; output signal names are included in row 2&amp;#44; signal radix is included in row 3.&amp;#10;TestNo is included in column 1&amp;#44; delay is included in column 2&amp;#10;&amp;#10;Create a single VERILOG initial statement&amp;#44; in a formatted code box&amp;#44; starting at row 4&amp;#44; and including the following:&amp;#10;TestNo.&amp;#10;Comment taken from the Note column.&amp;#10;Assignment of every input signal&amp;#44; irrespective of its value.&amp;#10;Do not assign any output signals.&amp;#10;&amp;quot;# (delay value)&amp;quot; statement&amp;#44; where delay can be integer or real&amp;#44; after all signal stimulus for the row have been assigned&amp;#44; using delay value in the delay column&amp;#44; with brackets () around (delay * period)&amp;#44; not including any character before the # character&amp;#44; and not including TestNo in the line.&amp;#10;Test if each output signal value (though not input signal values) matches the value included in its corresponding row&amp;#44; outputting a fail message if it does not match.</VerilogTestbench>
			</commands>
		</chatgpt>
	</hdlDesign>
</HDLGen>