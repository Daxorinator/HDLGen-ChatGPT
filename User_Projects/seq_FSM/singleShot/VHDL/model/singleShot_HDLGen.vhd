-- Header Section
-- <FM include> Generated by HDLGen, Github https://github.com/abishek-bupathi/HDLGen
-- <FM> Reference: https://tinyurl.com/VHDLTips 
-- <FM line space>
-- Component Name : singleShot
-- Title          : Pulse generator, one clock period duration

-- Description
-- Pulse generator, one clock period duration pulse
-- aShot asserted (h) when sw is asserted (h)
-- aShot deasserted   on subsequent clk active (l-h) edge 
-- If rst asserted while sw is assertted, wait for sw to deassert before 
-- generating aShot pulse, on next rising edge on sw

-- Author(s)      : Fearghal Morgan
-- Company        : University of Galway
-- Email          : fearghal.morgan@universityofgalway.ie
-- Date           : 28/03/2023

-- entity signal dictionary
-- <FM> clk  System clock strobe
-- <FM> Note: in line below, select Asynch/synch, h/l depending on user selection in UI
-- <FM> rst  Asynchronous/synchronous reset signal, asserted <h/l> 
-- sw	 Assertion L-H edge asserts signal aShot
-- aShot Asserted on L-H edge of signal sw. Deasserts on subsequent active clk edge. Asserted for maximum one clock period. 

-- internal signal dictionary
-- NS	Next/current state
-- CS	Next/current state

-- library declarations
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
-- <FM> use work.MainPackage.all;

-- entity declaration
entity singleShot is 
Port(
	clk : in std_logic;
	rst : in std_logic;
	sw : in std_logic;
	aShot : out std_logic
);
end entity singleShot;

-- <FM> architecture should be RTL not combinational
architecture RTL of singleShot is
-- Internal signal declarations
type stateType is (waitFor1, waitFor0);
signal NS : stateType;
signal CS : stateType;

begin

NSAndOPDecode_p: process(sw,CS)
begin
    --<FM update text> Complete the process if required and delete this comment
	aShot <= '0';-- default
	NS <= CS;-- default
	
	case CS is
		when waitFor1=>
			null;
		when  waitFor0=>
			null;
		when others =>
			null;
	end case;
end process;

stateReg_p: process(clk,rst)
begin
    --<FM update text> Complete the process if required and delete this comment
	if rst = '1' then
		CS <= waitFor1;
	elsif rising_edge(clk) then
		CS <= NS;
	end if;

end process;

end RTL;