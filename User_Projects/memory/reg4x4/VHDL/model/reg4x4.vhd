-- Header Section
-- <FM> Generated by HDLGen, Github https://github.com/abishek-bupathi/HDLGen
-- <FM> Reference: https://tinyurl.com/VHDLTips 

-- Component Name : reg4x4
-- Title          : 4 digit register memory

-- Description
-- 4 digit register memory

-- Synchronous write, memory(add) = dIn when we is asserted
-- Combinational read, dOut = memory(add)
-- Asynchronous reset, asserted high
-- Active rising edge clk

-- Author(s)      : Fearghal Morgan
-- Company        : University of Galway
-- Email          : fearghal.morgan@universityofgalway.ie
-- Date           : 02/04/2023

-- entity signal dictionary
-- clk	clk signal
-- rst	rst signal
-- ce	ce chip enable, asserted h
-- we	we write enable, asserted h
-- add	2-bit address
-- dIn	dIn data in digit (4 bits)
-- dOut	dOut = memory(add), combinational read

-- internal signal dictionary
-- CS	Current state signal
-- NS	Next state signal

-- library declarations
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.MainPackage.all; -- <FM>

-- entity declaration
entity reg4x4 is 
Port(
	clk : in std_logic;
	rst : in std_logic;
	ce : in std_logic;
	we : in std_logic;
	add : in std_logic_vector(1 downto 0);
	dIn : in std_logic_vector(3 downto 0);
	dOut : out std_logic_vector(3 downto 0)
);
end entity reg4x4;

architecture RTL of reg4x4 is
-- Internal signal declarations
signal CS : reg4x4_Array;
signal NS : reg4x4_Array;

begin

stateReg_p: process(clk,rst)
begin
	-- Complete the process if required
	if rst = '1' then
		CS <= (others => (others => '0'));
	elsif rising_edge(clk) then
		CS <= NS;
	end if;

end process;

NSDecode_p: process(ce,we,add,dIn,CS)
begin
	-- Complete the process if required
	NS <= CS;-- default
	if ce = '1' then
		if we = '1' then 
			NS(to_integer(unsigned(add))) <= dIn;
		end if;
	end if;
end process;

gen_dOut_c: dOut <= CS(to_integer(unsigned(add)));

end RTL;